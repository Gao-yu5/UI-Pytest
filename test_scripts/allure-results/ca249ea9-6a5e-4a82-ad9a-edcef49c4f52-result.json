{"name": "test_chaxun_pope[pope0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=102.0.5005.115)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0115D953+2414931]\n\tOrdinal0 [0x010EF5E1+1963489]\n\tOrdinal0 [0x00FDC6B8+837304]\n\tOrdinal0 [0x00FC4120+737568]\n\tOrdinal0 [0x01026E29+1142313]\n\tOrdinal0 [0x01033FB2+1195954]\n\tOrdinal0 [0x010242B6+1131190]\n\tOrdinal0 [0x00FFE860+976992]\n\tOrdinal0 [0x00FFF756+980822]\n\tGetHandleVerifier [0x013CCC62+2510274]\n\tGetHandleVerifier [0x013BF760+2455744]\n\tGetHandleVerifier [0x011EEABA+551962]\n\tGetHandleVerifier [0x011ED916+547446]\n\tOrdinal0 [0x010F5F3B+1990459]\n\tOrdinal0 [0x010FA898+2009240]\n\tOrdinal0 [0x010FA985+2009477]\n\tOrdinal0 [0x01103AD1+2046673]\n\tBaseThreadInitThunk [0x75D2FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x774D7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x774D7A6E+238]", "trace": "args = (<test_scripts.test_2_chaxun.TestchaxunPage object at 0x00000178842EF700>,)\nkwargs = {'browser': <utils.common_drivers.Drivers object at 0x00000178842EFD90>, 'pope': ('1001239',)}\nbrowser_driver = <utils.common_drivers.Drivers object at 0x00000178842EFD90>\nfunc_name = 'test_chaxun_pope'\nstart_time = datetime.datetime(2022, 6, 23, 19, 55, 2, 399005)\n\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        browser_driver = kwargs.get('browser')  # 获取driver\n        func_name = func.__name__  # 获取测试函数名\n    \n        start_time = datetime.datetime.now()\n        LOGGER.debug(f'用例（{func_name}）执行时间：{start_time}')\n    \n        try:\n>           func(*args, **kwargs)  # 执行测试函数\n\n..\\utils\\decorators.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_scripts.test_2_chaxun.TestchaxunPage object at 0x00000178842EF700>\npope = ('1001239',)\nbrowser = <utils.common_drivers.Drivers object at 0x00000178842EFD90>\n\n    @allure.story('经办人查询界面测试')\n    @error_screenshot()\n    @pytest.mark.parametrize('pope', test_data1)\n    def test_chaxun_pope(self,pope,browser):\n>       browser.chaxun_interdace_pope(\n            chacun_button=self.xinxi,\n                                 chacun_button1=self.jinbanr,\n                                 guke={\"locator\": self.jinbanr_id, \"value\": pope},\n                                 chacun_button2=self.CHA,\n                                chacun_button3=self.x_annaiu2\n                                      )\n\ntest_2_chaxun.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.common_drivers.Drivers object at 0x00000178842EFD90>\nchacun_button = ('xpath', \"//div[@id='accordion']/div/div/div\")\nchacun_button1 = ('xpath', \"//div[@id='SC']/a[2]\")\nchacun_button2 = ('xpath', \"//a[contains(@href, 'javascript:SAMIdclick()')]\")\nchacun_button3 = ('xpath', '/html/body/div[5]/div[1]/div[3]/a')\nguke = {'locator': ('xpath', \"//input[@type='text']\"), 'value': ('1001239',)}\n\n    def chaxun_interdace_pope(self,chacun_button,chacun_button1,chacun_button2,chacun_button3,guke={}):\n        # 先登录\n        # a=LoginPage()\n        # self.open_windows(url= 'http://47.111.8.42:8080/mms/mms/index.html')\n        # self.send_keys(locator=(a.USERNAME_INPUT),value=\"admir\")\n        # self.send_keys(locator=(a.PASSWORD_INPUT),value=\"1234\")\n        # self.click_button(a.LOGIN_BUTTON)\n        # 点击信息查询\n>       self.click_button(chacun_button)\n\n..\\utils\\common_drivers.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.common_drivers.Drivers object at 0x00000178842EFD90>\nlocator = ('xpath', \"//div[@id='accordion']/div/div/div\")\n\n    def click_button(self, locator):\n        \"\"\"\n        点击按钮\n        :param locator:\n        :return:\n        \"\"\"\n>       node = self.find_element(locator)\n\n..\\utils\\driver_base.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.common_drivers.Drivers object at 0x00000178842EFD90>\nlocator = ('xpath', \"//div[@id='accordion']/div/div/div\")\ncondition = 'presence', retries = 1\n\n    def find_element(self, locator, condition='presence', retries=1):\n        \"\"\"\n        通过等待条件定位元素\n        :param locator: 定义元组。例：(By.ID, '//*[@id=\"kw\"]')\n        :param condition: 等待条件\n        :param retries: 重试次数，默认1\n        :return: node or None\n        \"\"\"\n        error_info = None\n        for times in range(retries + 1):\n            try:\n                LOGGER.debug(f'定位元素：{locator}')\n                if condition == 'visibility':  # 等待节点可见\n                    node = self.wait.until(EC.visibility_of_element_located(locator))\n                else:  # 等待节点加载出来\n                    node = self.wait.until(EC.presence_of_element_located(locator))\n                break\n            except Exception as ex:\n                error_info = f'定位 {locator} 失败，错误信息：{ex}'\n                LOGGER.error(error_info)\n                if times < retries:\n                    LOGGER.warning(f'正在重试，当前重试次数：{times}，总数：{retries}')\n                    time.sleep(1)\n        else:\n>           raise Exception(error_info)\nE           Exception: 定位 ('xpath', \"//div[@id='accordion']/div/div/div\") 失败，错误信息：Message: no such window: target window already closed\nE           from unknown error: web view not found\nE             (Session info: chrome=102.0.5005.115)\nE           Stacktrace:\nE           Backtrace:\nE           \tOrdinal0 [0x0115D953+2414931]\nE           \tOrdinal0 [0x010EF5E1+1963489]\nE           \tOrdinal0 [0x00FDC6B8+837304]\nE           \tOrdinal0 [0x00FC4120+737568]\nE           \tOrdinal0 [0x01026E29+1142313]\nE           \tOrdinal0 [0x01033FB2+1195954]\nE           \tOrdinal0 [0x010242B6+1131190]\nE           \tOrdinal0 [0x00FFE860+976992]\nE           \tOrdinal0 [0x00FFF756+980822]\nE           \tGetHandleVerifier [0x013CCC62+2510274]\nE           \tGetHandleVerifier [0x013BF760+2455744]\nE           \tGetHandleVerifier [0x011EEABA+551962]\nE           \tGetHandleVerifier [0x011ED916+547446]\nE           \tOrdinal0 [0x010F5F3B+1990459]\nE           \tOrdinal0 [0x010FA898+2009240]\nE           \tOrdinal0 [0x010FA985+2009477]\nE           \tOrdinal0 [0x01103AD1+2046673]\nE           \tBaseThreadInitThunk [0x75D2FA29+25]\nE           \tRtlGetAppContainerNamedObjectPath [0x774D7A9E+286]\nE           \tRtlGetAppContainerNamedObjectPath [0x774D7A6E+238]\n\n..\\utils\\driver_base.py:73: Exception\n\nDuring handling of the above exception, another exception occurred:\n\nargs = (<test_scripts.test_2_chaxun.TestchaxunPage object at 0x00000178842EF700>,)\nkwargs = {'browser': <utils.common_drivers.Drivers object at 0x00000178842EFD90>, 'pope': ('1001239',)}\nbrowser_driver = <utils.common_drivers.Drivers object at 0x00000178842EFD90>\nfunc_name = 'test_chaxun_pope'\nstart_time = datetime.datetime(2022, 6, 23, 19, 55, 2, 399005)\n\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        browser_driver = kwargs.get('browser')  # 获取driver\n        func_name = func.__name__  # 获取测试函数名\n    \n        start_time = datetime.datetime.now()\n        LOGGER.debug(f'用例（{func_name}）执行时间：{start_time}')\n    \n        try:\n            func(*args, **kwargs)  # 执行测试函数\n        except Exception as ex:\n            LOGGER.error(f'用例（{func_name}）执行失败，错误信息：{ex}')\n            # 截图保存\n>           browser_driver.screenshot(storage_path=MODULE_DIR['failure_screenshot'],\n                                      picture_name=func_name)\n\n..\\utils\\decorators.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\driver_base.py:276: in screenshot\n    self.driver.save_screenshot(storage)\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1347: in save_screenshot\n    return self.get_screenshot_as_file(filename)\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1322: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1358: in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode('ascii'))\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1370: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)['value']\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017884355970>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774D7A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x774D7A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=102.0.5005.115)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x0115D953+2414931]\nE       \tOrdinal0 [0x010EF5E1+1963489]\nE       \tOrdinal0 [0x00FDC6B8+837304]\nE       \tOrdinal0 [0x00FC4120+737568]\nE       \tOrdinal0 [0x01026E29+1142313]\nE       \tOrdinal0 [0x01033FB2+1195954]\nE       \tOrdinal0 [0x010242B6+1131190]\nE       \tOrdinal0 [0x00FFE860+976992]\nE       \tOrdinal0 [0x00FFF756+980822]\nE       \tGetHandleVerifier [0x013CCC62+2510274]\nE       \tGetHandleVerifier [0x013BF760+2455744]\nE       \tGetHandleVerifier [0x011EEABA+551962]\nE       \tGetHandleVerifier [0x011ED916+547446]\nE       \tOrdinal0 [0x010F5F3B+1990459]\nE       \tOrdinal0 [0x010FA898+2009240]\nE       \tOrdinal0 [0x010FA985+2009477]\nE       \tOrdinal0 [0x01103AD1+2046673]\nE       \tBaseThreadInitThunk [0x75D2FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x774D7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x774D7A6E+238]\n\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchWindowException"}, "attachments": [{"name": "log", "source": "7cdf24a1-9629-45d2-9dbf-c870735c7104-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "pope", "value": "('1001239',)"}], "start": 1655985302399, "stop": 1655985309214, "uuid": "11e1b9e1-680e-4d29-96b9-16093b0a9b5f", "historyId": "96e11ba5591f74d086c70cb5a4c14aef", "testCaseId": "54ab814bc0a387928228992584833be7", "fullName": "test_scripts.test_2_chaxun.TestchaxunPage#test_chaxun_pope", "labels": [{"name": "story", "value": "经办人查询界面测试"}, {"name": "feature", "value": "信息查询"}, {"name": "parentSuite", "value": "test_scripts"}, {"name": "suite", "value": "test_2_chaxun"}, {"name": "subSuite", "value": "TestchaxunPage"}, {"name": "host", "value": "LAPTOP-0MDPAC41"}, {"name": "thread", "value": "1808-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_scripts.test_2_chaxun"}]}